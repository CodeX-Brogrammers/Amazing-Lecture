import logging

from aiohttp import web
from aioalice import Dispatcher, get_new_configured_app, types
from aioalice.dispatcher import MemoryStorage


# Blank:
# - –∑–≤—É–∫–æ–≤–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ 


WEBHOOK_URL_PATH = '/post'  # webhook endpoint

WEBAPP_HOST = 'localhost'
WEBAPP_PORT = 5050


logging.basicConfig(format=u'%(filename)s [LINE:%(lineno)d] #%(levelname)-8s [%(asctime)s]  %(message)s',
                    level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤ –ø–∞–º—è—Ç–∏
dp = Dispatcher(storage=MemoryStorage())


ele_link = 'https://market.yandex.ru/search?text=—Å–ª–æ–Ω'
# –ó–∞–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
OK_Button = types.Button('–õ–∞–¥–Ω–æ', url=ele_link)


@dp.request_handler(func=lambda areq: areq.session.new)
async def handle_start(alice_request):
    answer = """–£–≤–∞–∂–∞–µ–º—ã–µ —Å—Ç—É–¥–µ–Ω—Ç—ã, —Ä–∞–¥–∞ –≤–∏–¥–µ—Ç—å –≤–∞—Å –Ω–∞ —Å–≤–æ–µ–π –ª–µ–∫—Ü–∏–∏.
–Ø –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –Ω–∞—É–∫, –ê–≤—Ä–æ—Ä–∞ –•–∏—Å—Ç–æ—Ä–∏—è.
–Ø —Ö–æ—á—É –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –≤–∞–º–∏ –æ —Ç–æ–º, –∫–∞–∫ –∏—Å—Ç–æ—Ä–∏—è –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –Ω–∞—Å—Ç–æ—è—â–µ–π —Å–∫–∞–∑–∫–æ–π.
–ú–Ω–æ–≥–∏–µ –∏–∑ –≤–∞—Å –¥—É–º–∞—é—Ç, —á—Ç–æ –∏—Å—Ç–æ—Ä–∏—è - —Å–∫—É—á–Ω—ã–π –Ω–∞–±–æ—Ä —Ñ–∞–∫—Ç–æ–≤ –∏ –¥–∞—Ç.
–ù–æ —á—Ç–æ –µ—Å–ª–∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é –≤–∞—Å –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–∏—Ä —Ñ–∞–Ω—Ç–∞–∑–∏–π –∏ –∏—Å—Ç–æ—Ä–∏–π?
–Ø —É–∂–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∞ –Ω–∞—à –≤–æ–ª—à–µ–±–Ω—ã–π –ø–æ–µ–∑–¥.
–ì–æ—Ç–æ–≤—ã –ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ —ç—Ç–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ?
"""
    return alice_request.response(answer)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–º–æ—â–∏
@dp.request_handler(commands=["–ø–æ–º–æ—â—å", "–ø–æ—è—Å–Ω–∏", "—Ä–∞—Å—Å–∫–∞–∂–∏"])
async def handle_help(alice_request):
    answer = """–ù–∞–≤—ã–∫ "–£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–∞—è –ª–µ–∫—Ü–∏—è" –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞—Å –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ.
–ü—Ä–æ–¥–≤–∏–≥–∞—è—Å—å –≤—Å–µ –¥–∞–ª—å—à–µ –≤—ã –±—É–¥–µ—Ç–µ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–∞–ª–ª—ã.
–ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –î—Ä–µ–≤–Ω–µ–≥–æ –†–∏–º–∞, –°—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—å—è, –≠–ø–æ—Ö–∏ –í–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è –≤–º–µ—Å—Ç–µ —Å –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–º –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–æ–º –ê–≤—Ä–æ—Ä–æ–π –•–∏—Å—Ç–æ—Ä–∏–µ–π.
"""
    return alice_request.response(answer, tts=answer + '<speaker audio="alice-music-drum-loop-1.opus">')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å ?"
@dp.request_handler(commands=['–ª–∞–¥–Ω–æ', '–∫—É–ø–ª—é', '–ø–æ–∫—É–ø–∞—é', '—Ö–æ—Ä–æ—à–æ', '–æ–∫–µ–π'])
async def handle_help(alice_request):
    answer = f'–°–ª–æ–Ω–∞ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç–µ!'
    return alice_request.response(answer, tts=answer + '<speaker audio="alice-music-drum-loop-1.opus">')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ "–°—Ç–æ–ø –∫—Ä–∞–Ω–∞"
# TODO: 
# 1. –û—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞ –∞–∫–∞ "–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏"
@dp.request_handler(contains=['—Ö–æ—á—É', '–ª—É–Ω—É'])
async def handle_stop(alice_request):
    print(alice_request)
    answer = "–ü—Ä–æ—â–∞–πüåö"
    return alice_request.response(answer, tts=answer + '<speaker audio="alice-music-drum-loop-1.opus">')


if __name__ == '__main__':
    app = get_new_configured_app(dispatcher=dp, path=WEBHOOK_URL_PATH)
    web.run_app(app, host=WEBAPP_HOST, port=WEBAPP_PORT, loop=dp.loop)
